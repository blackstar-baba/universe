"use strict";(self.webpackChunkblackstar_universe=self.webpackChunkblackstar_universe||[]).push([[2921],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>d});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),l=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=l(r),d=o,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||c;return r?n.createElement(f,a(a({ref:t},p),{},{components:r})):n.createElement(f,a({ref:t},p))}));function d(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,a=new Array(c);a[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var l=2;l<c;l++)a[l]=r[l];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},9513:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>c,metadata:()=>i,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const c={},a=void 0,i={unversionedId:"OS/Linux/cache_miss",id:"OS/Linux/cache_miss",title:"cache_miss",description:"description",source:"@site/docs/OS/Linux/cache_miss.md",sourceDirName:"OS/Linux",slug:"/OS/Linux/cache_miss",permalink:"/docs/OS/Linux/cache_miss",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"add_device",permalink:"/docs/OS/Linux/add_device"},next:{title:"vmware_tools_centos7",permalink:"/docs/OS/Linux/centos/vmware_tools_centos7"}},s={},l=[{value:"description",id:"description",level:2},{value:"link",id:"link",level:2}],p={toc:l};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"description"},"description"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"perf stat ./yourapp\n")),(0,o.kt)("p",null,"See the ",(0,o.kt)("a",{parentName:"p",href:"https://perf.wiki.kernel.org/index.php/Tutorial"},"kernel wiki perf tutorial")," for details. This uses the hardware performance counters of your CPU, so the overhead is very small."),(0,o.kt)("p",null,"Example from the wiki:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"perf stat -B dd if=/dev/zero of=/dev/null count=1000000\n\nPerformance counter stats for 'dd if=/dev/zero of=/dev/null count=1000000':\n\n        5,099 cache-misses             #      0.005 M/sec (scaled from 66.58%)\n      235,384 cache-references         #      0.246 M/sec (scaled from 66.56%)\n    9,281,660 branch-misses            #      3.858 %     (scaled from 33.50%)\n  240,609,766 branches                 #    251.559 M/sec (scaled from 33.66%)\n1,403,561,257 instructions             #      0.679 IPC   (scaled from 50.23%)\n2,066,201,729 cycles                   #   2160.227 M/sec (scaled from 66.67%)\n          217 page-faults              #      0.000 M/sec\n            3 CPU-migrations           #      0.000 M/sec\n           83 context-switches         #      0.000 M/sec\n   956.474238 task-clock-msecs         #      0.999 CPUs\n\n   0.957617512  seconds time elapsed\n")),(0,o.kt)("h2",{id:"link"},"link"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Measure cache hit miss ",(0,o.kt)("a",{parentName:"li",href:"https://stackoverflow.com/questions/10082517/simplest-tool-to-measure-c-program-cache-hit-miss-and-cpu-time-in-linux"},"https://stackoverflow.com/questions/10082517/simplest-tool-to-measure-c-program-cache-hit-miss-and-cpu-time-in-linux"))))}u.isMDXComponent=!0}}]);