"use strict";(self.webpackChunkblackstar_universe=self.webpackChunkblackstar_universe||[]).push([[668],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||i;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2910:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const i={},o=void 0,l={unversionedId:"OS/Linux/virtual_disk_add",id:"OS/Linux/virtual_disk_add",title:"virtual_disk_add",description:"description",source:"@site/docs/OS/Linux/virtual_disk_add.md",sourceDirName:"OS/Linux",slug:"/OS/Linux/virtual_disk_add",permalink:"/docs/OS/Linux/virtual_disk_add",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"threads",permalink:"/docs/OS/Linux/threads"},next:{title:"yum_search",permalink:"/docs/OS/Linux/yum_search"}},u={},s=[{value:"description",id:"description",level:2},{value:"link",id:"link",level:2}],p={toc:s};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"description"},"description"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"virtual_disk_operation.sh")," :"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},'#!/bin/bash\n\n\nfilePath=/data1/disks\nfilePathPredix=disk\nmountPathPrefix=/mnt/vhds/vhd\n\noperation=$1\n\ncreate(){\n  num=$1\n  if [ "${num}" = "" ]; then\n    echo "Error: num is not set."\n    exit 1\n  fi\n\n  echo "=======> disk number:${num}<======="\n\n  sudo mkdir -p ${filePath}\n\n  for ((i=0; i<$num; i++))\n  do\n    fileFullPath="${filePath}/${filePathPredix}-${i}.img"\n    mountFullPath="${mountPathPrefix}-${i}"\n    echo "file path: ${fileFullPath}, mount path:${mountFullPath}"\n    sudo dd if=/dev/zero of=${fileFullPath} bs=1M count=1024\n    sudo mkfs -t ext4 ${fileFullPath}\n    sudo mkdir -p ${mountFullPath}\n    sudo mount -t auto -o loop ${fileFullPath} ${mountFullPath}\n  done\n}\n\nremove(){\n  mountPaths=$(df -Th | grep /mnt/vhds/vhd | awk \'{ print $7 }\')\n  for mp in ${mountPaths}\n  do\n    sudo umount "${mp}"\n  done\n  filePaths=$(ls ${filePath} | awk \'{ print $1 }\')\n  for fp in ${filePaths}\n  do\n    sudo rm "${filePath}/${fp}"\n  done\n}\n\nif [ "${operation}" = "" ]; then\n  echo "Error: operation is not set."\n  exit 1\nelif [ "${operation}" = "create" ]; then\n  create $2\nelif [ "${operation}" = "remove" ]; then\n  remove\nelse\n  echo "Error: ${operation} not supported."\n  exit 1\nfi\n\n')),(0,a.kt)("p",null,"how to use?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"create virtual disks:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sh /path/to/virtual_disk_operation.sh create num\n")),(0,a.kt)("p",null,"e.g. create two virtual disks"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sh /path/to/virtual_disk_operation.sh create 2\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"remove all virtual disks")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"sh /path/to/virtual_disk_operation.sh remove\n")),(0,a.kt)("h2",{id:"link"},"link"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.tecmint.com/create-virtual-harddisk-volume-in-linux/"},"How to Create a Virtual HardDisk Volume Using a File in Linux"))))}c.isMDXComponent=!0}}]);